{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PyPus A toolkit for interacting with the Octopus Deploy API pypus Pypus is a cli tool for making changes to Octopus Deploy Set the following environment variables OCTOPUS_API_KEY = 'API-YOURAPIKEY' OCTOPUS_SERVER_URI = 'https://my-octopus-server.com/api' Example Usage: pypus get-projects Default Variable set examples Example with scope: pypus set-var SQLDBA SSIS_BONDDB test test1 \\ '{\"Environment\":[\"Environments-90\"]}' Example without scope: pypus set-var SQLDBA SSIS_BONDDB test1 test2 '{}' Usage: pypus [OPTIONS] COMMAND [ARGS]... Options: --help Show this message and exit. Subcommands add-vars-toshelf : Parse json object and store variables check-env : Check required environment variables get-machines : Get a list of all machines for a space get-projects : Get a list of projects for space get-runbooks : Get a list of Runbooks for space get-shelf-key : Print data for a key in a shelf get-spaces : Get a list of spaces for server get-vars : Get a list of vars for a project in a space get-vars-add-toshelf : Get a list of vars for a project in a space and add to shelf list-shelf-data : Print data in a shelf publish-runbooks : Publish Runbooks with unpublished variables read-yaml : Read a yaml file set-var : Set a variable for a project in a space set-vars-from-shelf : Set project variables from values stored in shelf transpose-from-shelf : Transpose varaibles from shelf view-runbooks-publish-status : View which Runbooks have unpublished changes add-vars-toshelf Parse json object and store variables Usage: pypus add-vars-toshelf [OPTIONS] JSON_FILE Options: --help Show this message and exit. check-env Prints out the current necessary environment variables Usage: pypus check-env [OPTIONS] Options: --help Show this message and exit. get-machines Get a list of all machines for the defined space Arguments: space: The name of the Octopus Deploy Space Usage: pypus get-machines [OPTIONS] SPACE Options: --help Show this message and exit. get-projects Get a list of Projects for the defined URI Arguments: space: The name of the Octopus Deploy Space Usage: pypus get-projects [OPTIONS] SPACE Options: --help Show this message and exit. get-runbooks get a list of Runbooks for the defined URI Usage: pypus get-runbooks [OPTIONS] SPACE Options: --help Show this message and exit. get-shelf-key Assuming your shelf is a list of key value pairs, get the value for a particular key. Usage: pypus get-shelf-key [OPTIONS] SHELF_NAME KEY_NAME Options: --help Show this message and exit. get-spaces Get a list of spaces for server Usage: pypus get-spaces [OPTIONS] Options: --help Show this message and exit. get-vars Get a list of vars for a project within a space Arguments: space: The space where the project resides project: The project from which to get variables Usage: pypus get-vars [OPTIONS] SPACE PROJECT Options: --help Show this message and exit. get-vars-add-toshelf Get a list of vars for a project within a space Arguments: space: The space where the project resides project: The project from which to get variables shelf-name: The name of the shelf to create Usage: pypus get-vars-add-toshelf [OPTIONS] SPACE PROJECT SHELF_NAME Options: --help Show this message and exit. list-shelf-data Lists out contents for a Python shelf do not provide the file extension for the shelf you are referencing. The path should be included Usage: pypus list-shelf-data [OPTIONS] SHELF_NAME Options: --help Show this message and exit. publish-runbooks get a list of Runbooks for the defined URI Arguments: space: The name of the Octopus Deploy Space Usage: pypus publish-runbooks [OPTIONS] SPACE Options: --help Show this message and exit. read-yaml Reads a yaml file Usage: pypus read-yaml [OPTIONS] YAML_FILE Options: --help Show this message and exit. set-var Set a variable for a project in a space Arguments: space: The space where the project resides project: The project where the variable is created variable-name: The name of the variable variable-value: The value to set for the variable scope-values: A list of key value pairs sensitive: Set this flag for passwords note: Only string variable types are currently supported Example: pypus set-var SQLDBA SSIS_BONDDB test test1 '{\"Environment\":[\"Environments-90\"]}' Usage: pypus set-var [OPTIONS] SPACE PROJECT VARIABLE_NAME VARIABLE_VALUE VARIABLE_SCOPE Options: --sensitive --help Show this message and exit. set-vars-from-shelf Sets project variables from values stored in shelf. Arguments: space: The space where the project resides project: The project where the variable is created shelf-name: Name of the shelf where values are stored note: Only string variable types are currently supported Example: pypus set-var-from-shelf SQLDBA SSIS_BONDDB transposed-vars-for-space1-project1' Usage: pypus set-vars-from-shelf [OPTIONS] SPACE PROJECT SHELF_NAME Options: --help Show this message and exit. transpose-from-shelf Takes variables from a shelf and transposes Scope Values based on a provided map from a yaml file. New values are written to a new shelf file. Example: yaml-map-file image in documentation Arguments: shelf-name: The current shelf that holds the variables key-name: The key that holds the variables to transpose yaml-map-file: The yaml file with the mapped values new-shelf: The new shelf created with the transposed values Usage: pypus transpose-from-shelf [OPTIONS] SHELF_NAME KEY_NAME YAML_MAP_FILE NEW_SHELF Options: --help Show this message and exit. view-runbooks-publish-status get a list of Runbooks for the defined URI and display the variable/snapshot publish status Arguments: space: The name of the Octopus Deploy Space Usage: pypus view-runbooks-publish-status [OPTIONS] SPACE Options: --help Show this message and exit.","title":"Home"},{"location":"#pypus","text":"","title":"PyPus"},{"location":"#a-toolkit-for-interacting-with-the-octopus-deploy-api","text":"","title":"A toolkit for interacting with the Octopus Deploy API"},{"location":"#pypus_1","text":"Pypus is a cli tool for making changes to Octopus Deploy Set the following environment variables OCTOPUS_API_KEY = 'API-YOURAPIKEY' OCTOPUS_SERVER_URI = 'https://my-octopus-server.com/api' Example Usage: pypus get-projects Default Variable set examples Example with scope: pypus set-var SQLDBA SSIS_BONDDB test test1 \\ '{\"Environment\":[\"Environments-90\"]}' Example without scope: pypus set-var SQLDBA SSIS_BONDDB test1 test2 '{}' Usage: pypus [OPTIONS] COMMAND [ARGS]... Options: --help Show this message and exit. Subcommands add-vars-toshelf : Parse json object and store variables check-env : Check required environment variables get-machines : Get a list of all machines for a space get-projects : Get a list of projects for space get-runbooks : Get a list of Runbooks for space get-shelf-key : Print data for a key in a shelf get-spaces : Get a list of spaces for server get-vars : Get a list of vars for a project in a space get-vars-add-toshelf : Get a list of vars for a project in a space and add to shelf list-shelf-data : Print data in a shelf publish-runbooks : Publish Runbooks with unpublished variables read-yaml : Read a yaml file set-var : Set a variable for a project in a space set-vars-from-shelf : Set project variables from values stored in shelf transpose-from-shelf : Transpose varaibles from shelf view-runbooks-publish-status : View which Runbooks have unpublished changes","title":"pypus"},{"location":"#add-vars-toshelf","text":"Parse json object and store variables Usage: pypus add-vars-toshelf [OPTIONS] JSON_FILE Options: --help Show this message and exit.","title":"add-vars-toshelf"},{"location":"#check-env","text":"Prints out the current necessary environment variables Usage: pypus check-env [OPTIONS] Options: --help Show this message and exit.","title":"check-env"},{"location":"#get-machines","text":"Get a list of all machines for the defined space Arguments: space: The name of the Octopus Deploy Space Usage: pypus get-machines [OPTIONS] SPACE Options: --help Show this message and exit.","title":"get-machines"},{"location":"#get-projects","text":"Get a list of Projects for the defined URI Arguments: space: The name of the Octopus Deploy Space Usage: pypus get-projects [OPTIONS] SPACE Options: --help Show this message and exit.","title":"get-projects"},{"location":"#get-runbooks","text":"get a list of Runbooks for the defined URI Usage: pypus get-runbooks [OPTIONS] SPACE Options: --help Show this message and exit.","title":"get-runbooks"},{"location":"#get-shelf-key","text":"Assuming your shelf is a list of key value pairs, get the value for a particular key. Usage: pypus get-shelf-key [OPTIONS] SHELF_NAME KEY_NAME Options: --help Show this message and exit.","title":"get-shelf-key"},{"location":"#get-spaces","text":"Get a list of spaces for server Usage: pypus get-spaces [OPTIONS] Options: --help Show this message and exit.","title":"get-spaces"},{"location":"#get-vars","text":"Get a list of vars for a project within a space Arguments: space: The space where the project resides project: The project from which to get variables Usage: pypus get-vars [OPTIONS] SPACE PROJECT Options: --help Show this message and exit.","title":"get-vars"},{"location":"#get-vars-add-toshelf","text":"Get a list of vars for a project within a space Arguments: space: The space where the project resides project: The project from which to get variables shelf-name: The name of the shelf to create Usage: pypus get-vars-add-toshelf [OPTIONS] SPACE PROJECT SHELF_NAME Options: --help Show this message and exit.","title":"get-vars-add-toshelf"},{"location":"#list-shelf-data","text":"Lists out contents for a Python shelf do not provide the file extension for the shelf you are referencing. The path should be included Usage: pypus list-shelf-data [OPTIONS] SHELF_NAME Options: --help Show this message and exit.","title":"list-shelf-data"},{"location":"#publish-runbooks","text":"get a list of Runbooks for the defined URI Arguments: space: The name of the Octopus Deploy Space Usage: pypus publish-runbooks [OPTIONS] SPACE Options: --help Show this message and exit.","title":"publish-runbooks"},{"location":"#read-yaml","text":"Reads a yaml file Usage: pypus read-yaml [OPTIONS] YAML_FILE Options: --help Show this message and exit.","title":"read-yaml"},{"location":"#set-var","text":"Set a variable for a project in a space Arguments: space: The space where the project resides project: The project where the variable is created variable-name: The name of the variable variable-value: The value to set for the variable scope-values: A list of key value pairs sensitive: Set this flag for passwords note: Only string variable types are currently supported Example: pypus set-var SQLDBA SSIS_BONDDB test test1 '{\"Environment\":[\"Environments-90\"]}' Usage: pypus set-var [OPTIONS] SPACE PROJECT VARIABLE_NAME VARIABLE_VALUE VARIABLE_SCOPE Options: --sensitive --help Show this message and exit.","title":"set-var"},{"location":"#set-vars-from-shelf","text":"Sets project variables from values stored in shelf. Arguments: space: The space where the project resides project: The project where the variable is created shelf-name: Name of the shelf where values are stored note: Only string variable types are currently supported Example: pypus set-var-from-shelf SQLDBA SSIS_BONDDB transposed-vars-for-space1-project1' Usage: pypus set-vars-from-shelf [OPTIONS] SPACE PROJECT SHELF_NAME Options: --help Show this message and exit.","title":"set-vars-from-shelf"},{"location":"#transpose-from-shelf","text":"Takes variables from a shelf and transposes Scope Values based on a provided map from a yaml file. New values are written to a new shelf file. Example: yaml-map-file image in documentation Arguments: shelf-name: The current shelf that holds the variables key-name: The key that holds the variables to transpose yaml-map-file: The yaml file with the mapped values new-shelf: The new shelf created with the transposed values Usage: pypus transpose-from-shelf [OPTIONS] SHELF_NAME KEY_NAME YAML_MAP_FILE NEW_SHELF Options: --help Show this message and exit.","title":"transpose-from-shelf"},{"location":"#view-runbooks-publish-status","text":"get a list of Runbooks for the defined URI and display the variable/snapshot publish status Arguments: space: The name of the Octopus Deploy Space Usage: pypus view-runbooks-publish-status [OPTIONS] SPACE Options: --help Show this message and exit.","title":"view-runbooks-publish-status"},{"location":"about/","text":"The project on PyPi PyPi Project The official CLI Octopus CLI My contact information LinkTree","title":"Other Info"},{"location":"about/#the-project-on-pypi","text":"PyPi Project","title":"The project on PyPi"},{"location":"about/#the-official-cli","text":"Octopus CLI","title":"The official CLI"},{"location":"about/#my-contact-information","text":"LinkTree","title":"My contact information"},{"location":"example/","text":"Example yaml file for environment map --- env_map: Environments-1: Environments-101 Environments-2: Environments-102 Environments-3: Environments-88 Environments-4: Environments-89 Environments-21: Environments-90 Environments-103: Environments-105 Environments-102: Environments-104 Environments-141: Environments-91 Example bash script to migrate variables between projects #!/bin/bash echo \"Migrating from the project ${1}\" echo \"Migrating to the project ${2}\" # Target the old server to fetch variables source ~/target-old-octo.sh echo \"Fetching\" pypus get-vars-add-toshelf Default ${1} data/${1}_old-vars # Transpose variables echo \"Transposing\" pypus transpose-from-shelf data/${1}_old-vars Variables data/old_gw_new_sqldba.yml data/${2}_transposed # Target the new server to write variables source ~/target-new-octo.sh echo \"Posting\" pypus set-vars-from-shelf SQLDBA ${2} data/${2}_transposed Environment Variable set script example # Pypus Old Guidewire Octopus export OCTOPUS_API_KEY=YOUR_KEY export OCTOPUS_SERVER_URI='https://oldserver/api'","title":"Examples"},{"location":"example/#example-yaml-file-for-environment-map","text":"--- env_map: Environments-1: Environments-101 Environments-2: Environments-102 Environments-3: Environments-88 Environments-4: Environments-89 Environments-21: Environments-90 Environments-103: Environments-105 Environments-102: Environments-104 Environments-141: Environments-91","title":"Example yaml file for environment map"},{"location":"example/#example-bash-script-to-migrate-variables-between-projects","text":"#!/bin/bash echo \"Migrating from the project ${1}\" echo \"Migrating to the project ${2}\" # Target the old server to fetch variables source ~/target-old-octo.sh echo \"Fetching\" pypus get-vars-add-toshelf Default ${1} data/${1}_old-vars # Transpose variables echo \"Transposing\" pypus transpose-from-shelf data/${1}_old-vars Variables data/old_gw_new_sqldba.yml data/${2}_transposed # Target the new server to write variables source ~/target-new-octo.sh echo \"Posting\" pypus set-vars-from-shelf SQLDBA ${2} data/${2}_transposed","title":"Example bash script to migrate variables between projects"},{"location":"example/#environment-variable-set-script-example","text":"# Pypus Old Guidewire Octopus export OCTOPUS_API_KEY=YOUR_KEY export OCTOPUS_SERVER_URI='https://oldserver/api'","title":"Environment Variable set script example"}]}